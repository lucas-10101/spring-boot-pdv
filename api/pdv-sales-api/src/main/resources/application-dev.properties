
spring.application.name=pdv-sales-api

# web container setup
server.port=8002
server.error.whitelabel.enabled=false
server.error.include-stacktrace=always
server.error.include-message=always

# spring load balance ( eureka )
eureka.client.service-url.defaultZone=http://eureka:eureka@localhost:8888/eureka/
eureka.client.refresh.enable=false
eureka.client.enabled=true

# datasource
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.open-in-view=true

# hibernate
spring.jpa.show-sql=true
spring.jpa.properties.format_sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.sql.init.mode=never

# liquibase
spring.liquibase.enabled=false
spring.liquibase.change-log=classpath:liquibase/master.changelog.yml

# resource server setup ( KEYCLOAK IN DEV )
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://dockerserver:8080/realms/spring-boot-pdv
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://dockerserver:8080/realms/spring-boot-pdv/protocol/openid-connect/certs

# logging

logging.level.org.springframework.security=DEBUG